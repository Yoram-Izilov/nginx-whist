name: Deploy to Amazon ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1         
  IMAGE_NAME: python-app
  ECR_REPOSITORY: yoram/python-app
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract branch and commit SHA
      run: |
        BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)
        COMMIT_SHA=$(git rev-parse --short HEAD)
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }}:latest ./app
        # Tag the Docker image for ECR
        docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.BRANCH_NAME }}-${{ env.COMMIT_SHA }}
        # Push the Docker image to ECR with both tags
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.BRANCH_NAME }}-${{ env.COMMIT_SHA }}
